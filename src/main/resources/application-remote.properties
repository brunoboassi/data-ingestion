#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=b-7.statement-kafka.99d6fi.c10.kafka.us-east-1.amazonaws.com:9094,b-9.statement-kafka.99d6fi.c10.kafka.us-east-1.amazonaws.com:9094,b-8.statement-kafka.99d6fi.c10.kafka.us-east-1.amazonaws.com:9094
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.group-id=data-ingestion
spring.kafka.consumer.max-poll-records=${MAX_POOL_RECORDS:1}
spring.kafka.consumer.fetch-max-wait=1000
spring.kafka.consumer.fetch-min-size=8388608
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.properties.security.protocol=SSL
spring.kafka.listener.ack-mode=BATCH
spring.kafka.listener.concurrency=${KAFKA_CONCURRENCY:1}
data.ingestion.producer.topic=generate

spring.elasticsearch.rest.username=statement
spring.elasticsearch.rest.password=Statement-1
spring.elasticsearch.rest.uris=https://vpc-stateme-elasti-oswgsiv74kpp-uosach4nvexgqjw2tno24ws64e.us-east-1.es.amazonaws.com


logging.level.io.micrometer=TRACE

# management.metrics.enable.process=false
# management.metrics.enable.logback=false
# management.metrics.enable.jvm=false
# management.metrics.enable.system=false
# management.metrics.enable.kafka=false
management.metrics.enable.all=false
management.metrics.enable.elasticsearch=true

management.metrics.use-global-registry=true
management.metrics.export.cloudwatch.enabled=true
management.metrics.export.cloudwatch.namespace=statement12
management.metrics.export.cloudwatch.step=60s
management.metrics.export.cloudwatch.batchSize=50
cloud.aws.credentials.profileName=default
cloud.aws.region.auto=false
cloud.aws.region.static=us-east-1
cloud.aws.stack.auto=false

spring.main.web-application-type=none