spring.main.web-application-type=none
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP}
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.group-id=data-ingestion
spring.kafka.consumer.max-poll-records=10000
spring.kafka.consumer.fetch-max-wait=30000
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.ssl.protocol=SSL
spring.kafka.consumer.ssl.truststore-location=file:kafka.client.truststore.jks
spring.kafka.properties.security.protocol=SSL

spring.kafka.listener.ack-mode=BATCH
spring.kafka.listener.concurrency=100
data.ingestion.producer.topic=generate
spring.elasticsearch.rest.username=${ELASTICSEARCH_USERNAME}
spring.elasticsearch.rest.password=${ELASTICSEARCH_PASSWORD}
spring.elasticsearch.rest.uris=${ELASTICSEARCH_URIS}

management.metrics.enable.all=false
management.metrics.enable.elasticsearch=true

management.metrics.use-global-registry=true
management.metrics.export.cloudwatch.enabled=true
management.metrics.export.cloudwatch.namespace=statement12
management.metrics.export.cloudwatch.step=60s
management.metrics.export.cloudwatch.batchSize=50

cloud.aws.region.auto=false
cloud.aws.region.static=us-east-1
cloud.aws.stack.auto=false
cloud.aws.credentials.accessKey=${CLOUDWATCH_USERNAME}
cloud.aws.credentials.secretKey=${CLOUDWATCH_PASSWORD}
